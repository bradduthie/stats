[{"name":"app.R","content":"library(shiny)\nlibrary(ggplot2)\n\n\nui <- fluidPage(\n    fluidRow(\n        column(width = 8,\n               h4(\"Click plot to add points\"),\n               actionButton(\"rem_point\", \"Remove Last Point\"),\n               actionButton(\"cor_val\", \"Show correlation coefficient\"),\n               actionButton(\"rm_cval\", \"Hide correlation coefficient\"),\n               actionButton(\"pvalue\",  \"Show p-value of correlation test\"),\n               actionButton(\"rm_pval\", \"Hide p-value of correlation test\"),\n               plotOutput(\"plot1\", click = \"plot_click\")),\n        column(width = 3,\n               h4(\"Table of points on plot\"),\n               tableOutput(\"table\"))\n    )\n)\n\nserver = function(input, output){\n    \n    values    <- reactiveValues()\n    values$DT <- data.frame(x = numeric(),\n                            y = numeric())\n    \n    output$plot1 = renderPlot({\n        \n        ggplot(values$DT, aes(x = x, y = y)) +\n            lims(x = c(0, 100), y = c(0, 100)) +\n            theme_bw() + theme(panel.border = element_blank(), \n                               panel.grid.major = element_blank(),\n                               panel.grid.minor = element_blank(), \n                               axis.line = element_line(colour = \"black\"),\n                               legend.position = \"none\",\n                               text = element_text(size = 20),\n                               axis.text = element_text(size = 20)) +\n            geom_point(colour = \"black\", size = 3) + \n            xlab(\"X variable\") + ylab(\"Y variable\") +\n            annotate(\"text\", x = 0, y = 95, label = values$rval, size = 10, \n                     hjust = 0) +\n            annotate(\"text\", x = 75, y = 95, label = values$pval, size = 10, \n                     hjust = 0)\n    })\n    \n    observeEvent(input$plot_click, {\n        add_row <- data.frame(x = input$plot_click$x,\n                              y = input$plot_click$y)\n        values$DT <- rbind(values$DT, add_row)\n    })\n    \n    observeEvent(input$rm_cval, {\n        values$rval <- \"\";\n    })\n    \n    observeEvent(input$cor_val, {\n        rrep <- NA;\n        if(dim(values$DT)[1] > 1){\n            rval <- cor(values$DT[,1], values$DT[,2]);\n            rval <- round(rval, digits = 3);\n            rrep <- paste(\"r = \", rval, sep = \"\");\n            values$rval <- rrep;\n        }\n    })\n    \n    observeEvent(input$pvalue, {\n        prep <- NA;\n        if(dim(values$DT)[1] > 1){\n            pval <- cor.test(values$DT[,1], values$DT[,2])$p.value;\n            pval <- round(pval, digits = 3);\n            prep <- paste(\"p = \", pval, sep = \"\");\n            values$pval <- prep;\n        }\n    })\n    \n    observeEvent(input$rm_pval, {\n        values$pval <- \"\";\n    })\n    \n    observeEvent(input$rem_point, {\n        rem_row <- values$DT[-nrow(values$DT), ]\n        values$DT <- rem_row\n    })\n    \n    output$table <- renderTable({\n        values$DT[,1:2];\n    })\n}\n\nshinyApp(ui, server)","type":"text"}]
