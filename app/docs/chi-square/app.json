[{"name":"app.R","content":"library(shiny);\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"Visualising the Chi-square statistic and p-values\"),\n\n    hr(),\n    h4(\"The plot below shows the Chi-square distribution. Use the slider at the bottom to change the Chi-square value, then see how the probability of sampling this Chi-square value or higher changes. Use the numeric input to change the degrees of freedom.\"),\n    hr(),\n\n    plotOutput(\"distPlot\"),\n\n    fluidRow(\n        sliderInput(\"cs\", label = \"Chi-square\", width=\"100%\", min = 0,\n                    max = 20, value = 1, step = 0.1)\n    ),\n    fluidRow(\n        column(1, offset = 0),\n        column(4, offset = 1,\n               numericInput(\"df\", label = \"degrees of freedom (df)\", width=\"100%\",\n                           min = 1, max = Inf, value = 4, step = 1),\n        )\n    )\n\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output){\n\n    mbox <- function(x0, x1, y0, y1){\n        xx <- seq(from=x0, to=x1, length.out = 100);\n        yy <- seq(from=y0, to=y1, length.out = 100);\n        xd <- c(rep(x0, 100), xx, rep(x1,100), rev(xx));\n        yd <- c(yy, rep(y1,100), rev(yy), rep(y0, 100));\n        return(list(x=xd, y=yd));\n    }\n\n    output$distPlot <- renderPlot({\n        cs  <- input$cs;\n        df  <- input$df;\n        zz  <- pchisq(q = cs, df = df);\n        xx  <- seq(from = 0.0001, to = 20, by = 0.0001);\n        yy  <- dchisq(x = xx, df = df);\n        o1  <- which(xx >= cs);\n        b1  <- which(xx <= cs);\n        par(mar = c(5, 5, 1, 1), lwd = 3);\n        mxy <- max(yy[1:length(xx)]);\n        ymx <- 0.2;\n        if(mxy > 0.2){\n          ymx <- mxy;\n        }\n        if(df == 1){\n          ymx   <- 3;\n          ycurr <- yy[xx==cs];\n          plot(x = xx, y = yy, type = \"l\", lwd = 4, cex.lab = 2, cex.lab = 2,\n               cex.axis = 2, ylab = \"Probability density\", ylim = c(0, ymx),\n               xlab = \"Chi-square value\", xlim = c(0, 4));\n          polygon(c(xx[o1], max(xx), rev(xx[o1])),\n                  c(ycurr[1], yy[o1], rep(0, length(xx[o1]))),\n                  col=\"#E69F00\", lwd = 4);\n          mxx <- which(xx == max(xx[b1]));\n          polygon(c(xx[b1], max(xx[b1]), rev(xx[b1])),\n                  c(yy[b1], yy[mxx], rep(0, length(b1))),\n                  col=\"#56B4E9\", lwd = 4);\n          bx1y <- ymx;\n          bx2y <- 0.91 * ymx;\n          bx3y <- 0.81 * ymx;\n          bx4y <- 0.90 * ymx;\n          t1y  <- 0.955 * ymx;\n          t2y  <- 0.855 * ymx;\n          points(x = xx, y = yy, type = \"l\", lwd = 4);\n          tbox <- mbox(x0 = 1, x1 = 3, y0 = bx2y, y1 = bx1y);\n          text(x = 2, y = t1y, labels = \"\", cex = 1.5);\n          polygon(x=tbox$x, y=tbox$y, lwd=3, border=\"black\", col=\"#56B4E9\");\n          tbox <- mbox(x0 = 1, x1 = 3, y0 = bx3y, y1 = bx4y);\n          text(x = 2, y = t2y, labels = \"\", cex = 1.5);\n          polygon(x=tbox$x, y=tbox$y, lwd = 3, border=\"black\", col=\"#E69F00\");\n          pbrown   <- round(1 - pchisq(q = cs, df = df), digits = 3);\n          pblue    <- round(1 - pbrown, digits = 3);\n          text(x = 2, y = t1y,\n               labels = paste(\"P =\", pblue), cex = 2);\n          text(x = 2, y = t2y,\n               labels = paste(\"P =\", pbrown), cex = 2);\n        }else{\n          ycurr <- yy[xx==cs];\n          plot(x = xx, y = yy, type = \"l\", lwd = 4, cex.lab = 2, cex.lab = 2,\n               cex.axis = 2, ylab = \"Probability density\", ylim = c(0, ymx),\n               xlab = \"Chi-square value\", xlim = c(0, 20));\n          polygon(c(xx[o1], max(xx), rev(xx[o1])),\n                  c(ycurr[1], yy[o1], rep(0, length(xx[o1]))),\n                  col=\"#E69F00\", lwd = 4);\n          mxx <- which(xx == max(xx[b1]));\n          polygon(c(xx[b1], max(xx[b1]), rev(xx[b1])),\n                  c(yy[b1], yy[mxx], rep(0, length(b1))),\n                  col=\"#56B4E9\", lwd = 4);\n          bx1y <- ymx;\n          bx2y <- 0.91 * ymx;\n          bx3y <- 0.81 * ymx;\n          bx4y <- 0.90 * ymx;\n          t1y  <- 0.955 * ymx;\n          t2y  <- 0.855 * ymx;\n          points(x = xx, y = yy, type = \"l\", lwd = 4);\n          tbox <- mbox(x0 = 16, x1 = 20, y0 = bx2y, y1 = bx1y);\n          text(x = 10, y = t1y, labels = \"\", cex = 1.5);\n          polygon(x=tbox$x, y=tbox$y, lwd=3, border=\"black\", col=\"#56B4E9\");\n          tbox <- mbox(x0 = 16, x1 = 20, y0 = bx3y, y1 = bx4y);\n          text(x = 10, y = t2y, labels = \"\", cex = 1.5);\n          polygon(x=tbox$x, y=tbox$y, lwd = 3, border=\"black\", col=\"#E69F00\");\n          pbrown   <- round(1 - pchisq(q = cs, df = df), digits = 3);\n          pblue    <- round(1 - pbrown, digits = 3);\n          text(x = 18, y = t1y,\n               labels = paste(\"P =\", pblue), cex = 2);\n          text(x = 18, y = t2y,\n               labels = paste(\"P =\", pbrown), cex = 2);\n        }\n    })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n\n\n","type":"text"}]
