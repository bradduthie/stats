[{"name":"app.R","content":"library(shiny);\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n    \n    # Application title\n    titlePanel(\"Visualising the t-statistic and p-values\"),\n    \n    hr(),\n    h4(\"The plot below shows the Student's t-distribution. Use the slider at the bottom to change the t-score in the histogram, and see how the probability of sampling above and below the t-score changes. Use the pull down menu to switch to a two-tailed distribution to see the probability of sampling a value as more extreme than your z-score in either direction. Use the numeric input to change the degrees of freedom.\"),\n    hr(),\n    \n    plotOutput(\"distPlot\"),\n    \n    fluidRow(\n        sliderInput(\"t\", label = \"t\", width=\"100%\", min = -4, \n                    max = 4, value = 0, step = 0.01)\n        ),\n    fluidRow(\n        column(4, offset = 1,\n               selectInput(\"tailed\", \"Tailed\",\n                           c(\"One-tailed\" = \"1\", \n                             \"Two-tailed\" = \"2\"),\n                           selected = \"1\"),\n               \n        ),\n        column(1, offset = 0),\n        column(4, offset = 1,\n               numericInput(\"df\", label = \"Degrees of Freedom\", width=\"100%\",\n                           min = 1, max = Inf, value = 4, step = 1)\n        )\n    )\n    \n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output){\n    \n    mbox <- function(x0, x1, y0, y1){\n        xx <- seq(from=x0, to=x1, length.out = 100);\n        yy <- seq(from=y0, to=y1, length.out = 100);\n        xd <- c(rep(x0, 100), xx, rep(x1,100), rev(xx));\n        yd <- c(yy, rep(y1,100), rev(yy), rep(y0, 100));\n        return(list(x=xd, y=yd));\n    }\n    \n    output$distPlot <- renderPlot({\n        if(input$tailed == \"1\"){\n            zz  <- input$t;\n            vv  <- input$df;\n            xx  <- seq(from = -5, to = 5, by = 0.0001);\n            yy  <- dt(xx, df = vv);\n            par(mar = c(5, 5, 1, 1), lwd = 3);\n            plot(x = xx, y = yy, type = \"l\", lwd = 4, cex.lab = 2, cex.lab = 2,\n                 cex.axis = 2, ylab = \"Probability density\", ylim = c(0, 0.4),\n                 xlab = \"t-score\");\n            polygon(c(xx[xx>=zz], max(xx)), c(yy[xx==max(xx)], yy[xx>=zz]), \n                    col=\"#E69F00\");\n            polygon(c(min(xx), xx[xx < zz]), c(yy[xx < zz], yy[xx==min(xx)]), \n                    col=\"#56B4E9\");\n            points(x = xx, y = yy, type = \"l\", lwd = 4);\n            tbox <- mbox(x0 =-5, x1 = -2.5, y0 = 0.15, y1 = 0.3);\n            text(x = mean(c(-5, -2.5)), y = 0.325, labels = \"Probability blue\",\n                 cex = 1.5);\n            polygon(x=tbox$x, y=tbox$y, lwd=3, border=\"black\", col=\"#56B4E9\");\n            tbox <- mbox(x0 =2.5, x1 = 5, y0 = 0.15, y1 = 0.3);\n            text(x = mean(c(5, 2.5)), y = 0.325, labels = \"Probability brown\",\n                 cex = 1.5);\n            polygon(x=tbox$x, y=tbox$y, lwd=3, border=\"black\", col=\"#E69F00\");\n            pbrown   <- round(1 - pt(q = zz, df = vv), digits = 3);\n            pblue    <- round(1 - pbrown, digits = 3);\n            if(zz >= 0){\n                text(x = mean(c(-5, -2.5)), y = mean(c(0.15, 0.3)), \n                     labels = pblue, cex = 2);\n                text(x = mean(c(5, 2.5)), y = mean(c(0.15, 0.3)), \n                     labels = paste(\"P =\", pbrown), cex = 2);\n            }else{\n                text(x = mean(c(-5, -2.5)), y = mean(c(0.15, 0.3)), \n                     labels = paste(\"P =\", pblue), cex = 2);\n                text(x = mean(c(5, 2.5)), y = mean(c(0.15, 0.3)), \n                     labels = pbrown, cex = 2);\n            }\n        }else{\n            zz  <- input$t;\n            if(zz < 0){\n                zz <- -1 * zz;\n            }\n            z2  <- -1*zz;\n            vv  <- input$df;\n            xx  <- seq(from = -5, to = 5, by = 0.0001);\n            yy  <- dt(xx, df = vv);\n            par(mar = c(5, 5, 1, 1), lwd = 3);\n            plot(x = xx, y = yy, type = \"l\", lwd = 4, cex.lab = 2, cex.lab = 2,\n                 cex.axis = 2, ylab = \"Probability density\", ylim = c(0, 0.4),\n                 xlab = \"t-score\");\n            polygon(c(xx[xx>=zz], max(xx)), c(yy[xx==max(xx)], yy[xx>=zz]), \n                    col=\"#E69F00\");\n            polygon(c(min(xx), xx[xx < zz]), c(yy[xx < zz], yy[xx==min(xx)]), \n                    col=\"#56B4E9\");\n            polygon(c(min(xx), xx[xx < z2]), c(yy[xx < z2], yy[xx==min(xx)]), \n                    col=\"#E69F00\");\n            points(x = xx, y = yy, type = \"l\", lwd = 4);\n            tbox <- mbox(x0 =-5, x1 = -2.5, y0 = 0.15, y1 = 0.3);\n            text(x = mean(c(-5, -2.5)), y = 0.325, labels = \"Probability blue\",\n                 cex = 1.5);\n            polygon(x=tbox$x, y=tbox$y, lwd=3, border=\"black\", col=\"#56B4E9\");\n            tbox <- mbox(x0 =2.5, x1 = 5, y0 = 0.15, y1 = 0.3);\n            text(x = mean(c(5, 2.5)), y = 0.325, labels = \"Probability brown\",\n                 cex = 1.5);\n            polygon(x=tbox$x, y=tbox$y, lwd=3, border=\"black\", col=\"#E69F00\");\n            pbrown   <- 2 * round(1 - pt(q = zz, df = vv), digits = 3);\n            pblue    <- round(1 - pbrown, digits = 3);\n            text(x = mean(c(-5, -2.5)), y = mean(c(0.15, 0.3)), \n                 labels = pblue, cex = 2);\n            text(x = mean(c(5, 2.5)), y = mean(c(0.15, 0.3)), \n                 labels = paste(\"P =\", pbrown), cex = 2);\n        }\n    \n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n\n\n","type":"text"}]
