[{"name":"app.R","content":"library(shiny);\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"Visualising the F-statistic and p-values\"),\n\n    hr(),\n    h4(\"The plot below shows the F-distribution for looking at the ratio of variances. Use the slider at the bottom to change the F ratio, then see how the probability of sampling this F ratio or higher changes. Use the numeric input to change the degrees of freedom.\"),\n    hr(),\n\n    plotOutput(\"distPlot\"),\n\n    fluidRow(\n        sliderInput(\"V1\", label = \"Variance 1\", width=\"100%\", min = 0,\n                    max = 10, value = 1, step = 0.01),\n       sliderInput(\"V2\", label = \"Variance 2\", width=\"100%\", min = 0,\n                max = 10, value = 1, step = 0.01)\n    ),\n    fluidRow(\n        column(1, offset = 0),\n        column(4, offset = 1,\n               numericInput(\"df1\", label = \"Variance 1 df\", width=\"100%\",\n                           min = 1, max = Inf, value = 4, step = 1),\n               numericInput(\"df2\", label = \"Variance 2 df\", width=\"100%\",\n                            min = 1, max = Inf, value = 4, step = 1)\n        )\n    )\n\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output){\n\n    mbox <- function(x0, x1, y0, y1){\n        xx <- seq(from=x0, to=x1, length.out = 100);\n        yy <- seq(from=y0, to=y1, length.out = 100);\n        xd <- c(rep(x0, 100), xx, rep(x1,100), rev(xx));\n        yd <- c(yy, rep(y1,100), rev(yy), rep(y0, 100));\n        return(list(x=xd, y=yd));\n    }\n\n    output$distPlot <- renderPlot({\n        v1  <- input$V1;\n        v2  <- input$V2;\n        df1 <- input$df1;\n        df2 <- input$df2;\n        zz  <- pf(q = v1/v2, df1 = df1, df2 = df2, lower.tail = FALSE)\n        xx  <- seq(from = 0, to = 10, by = 0.0001);\n        yy  <- df(x = xx, df1 = df1, df2 = df2);\n        o1  <- which(xx >= v1/v2);\n        b1  <- which(xx <= v1/v2);\n        par(mar = c(5, 5, 1, 1), lwd = 3);\n        mxy <- max(yy[2:length(xx)]);\n        ymx <- 1;\n        if(mxy > 1 & df1 > 3 & df2 > 3){\n          ymx <- mxy;\n        }\n        plot(x = xx, y = yy, type = \"l\", lwd = 4, cex.lab = 2, cex.lab = 2,\n             cex.axis = 2, ylab = \"Probability density\", ylim = c(0, ymx),\n             xlab = \"F value\", xlim = c(0, 5.5));\n        polygon(c(xx[o1], max(xx), rev(xx[o1])),\n                c(yy[xx==max(xx)], yy[o1], rep(0, length(xx[o1]))),\n                col=\"#E69F00\", lwd = 4);\n        mxx <- which(xx == max(xx[b1]));\n        polygon(c(xx[b1], max(xx[b1]), rev(xx[b1])),\n                c(yy[b1], yy[mxx], rep(0, length(b1))),\n                col=\"#56B4E9\", lwd = 4);\n        bx1y <- ymx;\n        bx2y <- 0.91 * ymx;\n        bx3y <- 0.81 * ymx;\n        bx4y <- 0.90 * ymx;\n        t1y  <- 0.955 * ymx;\n        t2y  <- 0.855 * ymx;\n        points(x = xx, y = yy, type = \"l\", lwd = 4);\n        tbox <- mbox(x0 = 4, x1 = 5.5, y0 = bx2y, y1 = bx1y);\n        text(x = 4.75, y = t1y, labels = \"\", cex = 1.5);\n        polygon(x=tbox$x, y=tbox$y, lwd=3, border=\"black\", col=\"#56B4E9\");\n        tbox <- mbox(x0 = 4 , x1 = 5.5, y0 = bx3y, y1 = bx4y);\n        text(x = 4.75, y = t2y, labels = \"\", cex = 1.5);\n        polygon(x=tbox$x, y=tbox$y, lwd = 3, border=\"black\", col=\"#E69F00\");\n        pbrown   <- round(pf(q = v1/v2, df1 = df1, df2 = df2,\n                          lower.tail = FALSE), digits = 3);\n        pblue    <- round(1 - pbrown, digits = 3);\n        text(x = 4.75, y = t1y,\n             labels = paste(\"P =\", pblue), cex = 2);\n        text(x = 4.75, y = t2y,\n             labels = paste(\"P =\", pbrown), cex = 2);\n    })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n\n\n","type":"text"}]
